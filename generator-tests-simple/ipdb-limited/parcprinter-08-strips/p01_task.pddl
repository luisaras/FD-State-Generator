(define (problem printjob) (:domain upp) (:objects dummy-sheet sheet1 - sheet_t image-1 - image_t) (:init (uninitialized) (available up-rsrc) (available htmovercolor-rsrc) (available htmoverblack-rsrc) (available finisher2-rsrc) (available finisher1-rsrc) (available endcap-rsrc) (available down-rsrc) (available colorprinter-rsrc) (available colorfeeder-rsrc) (available colorcontainer-rsrc) (available blackprinter-rsrc) (available blackfeeder-rsrc) (available blackcontainer-rsrc) (sideup sheet1  back) (notprintedwith sheet1  front  black) (location sheet1  colorcontainer_exittoime-colorprinter_entry) (notprintedwith sheet1  back  black) (sideup sheet1  front) (stackedin sheet1  finisher1_tray) (not (hasimage sheet1  front  image-1))) (:goal (and (hasimage sheet1 front image-1) (notprintedwith sheet1 front color) (notprintedwith sheet1 back black) (notprintedwith sheet1 back color) (sideup sheet1 front) (stackedin sheet1 finisher1_tray))) (:metric minimize (total-cost)))